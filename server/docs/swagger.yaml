basePath: /
definitions:
  config.AliyunOSS:
    properties:
      accessKeyId:
        type: string
      accessKeySecret:
        type: string
      bucketName:
        type: string
      bucketUrl:
        type: string
      endpoint:
        type: string
    type: object
  config.Autocode:
    properties:
      root:
        type: string
      server:
        type: string
      serverApi:
        type: string
      serverInitialize:
        type: string
      serverModel:
        type: string
      serverRequest:
        type: string
      serverRouter:
        type: string
      serverService:
        type: string
      web:
        type: string
      webApi:
        type: string
      webFlow:
        type: string
      webForm:
        type: string
      webTable:
        type: string
    type: object
  config.BlindBox:
    properties:
      one:
        description: 一连抽
        type: integer
      ten:
        description: 十连抽
        type: integer
    type: object
  config.Captcha:
    properties:
      imgHeight:
        description: 图片高度
        type: integer
      imgWidth:
        description: 图片宽度
        type: integer
      keyLong:
        description: 验证码长度
        type: integer
    type: object
  config.Casbin:
    properties:
      modelPath:
        description: Model路径
        type: string
    type: object
  config.CollectionAddress:
    properties:
      address:
        description: 收款地址
        type: string
      debug:
        type: string
      direct:
        description: 直推奖金比例
        type: string
      exchange:
        description: 算力每日释放avw比例
        type: string
      fees:
        description: 转卡手续费百分比
        type: string
      proportion:
        description: 卡牌卖出原价比例
        type: string
    type: object
  config.Detail:
    properties:
      compareField:
        type: string
      interval:
        type: string
      tableName:
        type: string
    type: object
  config.Email:
    properties:
      from:
        description: 收件人
        type: string
      host:
        description: 服务器地址
        type: string
      isSSL:
        description: 是否SSL
        type: boolean
      nickname:
        description: 昵称
        type: string
      port:
        description: 端口
        type: integer
      secret:
        description: 密钥
        type: string
      to:
        description: 收件人
        type: string
    type: object
  config.Excel:
    properties:
      dir:
        type: string
    type: object
  config.JWT:
    properties:
      bufferTime:
        description: 缓冲时间
        type: integer
      expiresTime:
        description: 过期时间
        type: integer
      signingKey:
        description: jwt签名
        type: string
    type: object
  config.Local:
    properties:
      path:
        description: 本地文件路径
        type: string
    type: object
  config.Mysql:
    properties:
      config:
        type: string
      dbname:
        description: 数据库名
        type: string
      logMode:
        type: boolean
      logZap:
        type: string
      maxIdleConns:
        type: integer
      maxOpenConns:
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Qiniu:
    properties:
      accessKey:
        description: accessKey
        type: string
      bucket:
        description: 空间名称
        type: string
      imgPath:
        description: CDN加速域名
        type: string
      secretKey:
        description: secretKey
        type: string
      useCdnDomains:
        description: 上传是否使用CDN上传加速
        type: boolean
      useHttps:
        description: 是否使用https
        type: boolean
      zone:
        description: 存储区域
        type: string
    type: object
  config.Redis:
    properties:
      addr:
        description: 服务器地址:端口
        type: string
      db:
        type: integer
      password:
        description: 密码
        type: string
    type: object
  config.Server:
    properties:
      aliyunOSS:
        $ref: '#/definitions/config.AliyunOSS'
      autoCode:
        $ref: '#/definitions/config.Autocode'
        description: auto
      blindBox:
        $ref: '#/definitions/config.BlindBox'
      captcha:
        $ref: '#/definitions/config.Captcha'
      casbin:
        $ref: '#/definitions/config.Casbin'
      collectionAddress:
        $ref: '#/definitions/config.CollectionAddress'
      email:
        $ref: '#/definitions/config.Email'
      excel:
        $ref: '#/definitions/config.Excel'
      jwt:
        $ref: '#/definitions/config.JWT'
      local:
        $ref: '#/definitions/config.Local'
        description: oss
      mysql:
        $ref: '#/definitions/config.Mysql'
        description: gorm
      qiniu:
        $ref: '#/definitions/config.Qiniu'
      redis:
        $ref: '#/definitions/config.Redis'
      system:
        $ref: '#/definitions/config.System'
      tencentCOS:
        $ref: '#/definitions/config.TencentCOS'
      timer:
        $ref: '#/definitions/config.Timer'
      zap:
        $ref: '#/definitions/config.Zap'
    type: object
  config.System:
    properties:
      addr:
        description: 端口值
        type: integer
      dbType:
        description: 数据库类型:mysql(默认)|sqlite|sqlserver|postgresql
        type: string
      env:
        description: 环境值
        type: string
      ossType:
        description: Oss类型
        type: string
      useMultipoint:
        description: 多点登录拦截
        type: boolean
    type: object
  config.TencentCOS:
    properties:
      baseURL:
        type: string
      bucket:
        type: string
      pathPrefix:
        type: string
      region:
        type: string
      secretID:
        type: string
      secretKey:
        type: string
    type: object
  config.Timer:
    properties:
      detail:
        items:
          $ref: '#/definitions/config.Detail'
        type: array
      spec:
        type: string
      start:
        type: boolean
    type: object
  config.Zap:
    properties:
      director:
        description: 日志文件夹
        type: string
      encodeLevel:
        description: 编码级
        type: string
      format:
        description: 输出
        type: string
      level:
        description: 级别
        type: string
      linkName:
        description: 软链接名称
        type: string
      logInConsole:
        description: 输出控制台
        type: boolean
      prefix:
        description: 日志前缀
        type: string
      showLine:
        description: 显示行
        type: boolean
      stacktraceKey:
        description: 栈名
        type: string
    type: object
  model.AutoCodeStruct:
    properties:
      abbreviation:
        description: Struct简称
        type: string
      autoCreateApiToSql:
        description: 是否自动创建api
        type: boolean
      autoMoveFile:
        description: 是否自动移动文件
        type: boolean
      description:
        description: Struct中文名称
        type: string
      fields:
        items:
          $ref: '#/definitions/model.Field'
        type: array
      packageName:
        description: 文件名称
        type: string
      structName:
        description: Struct名称
        type: string
      tableName:
        description: 表名
        type: string
    type: object
  model.AvfCard:
    properties:
      author:
        description: 作者
        type: string
      contractAddress:
        description: 合约地址
        type: string
      createDate:
        description: 创建时间
        type: string
      createdAt:
        description: 创建时间
        type: string
      desc:
        description: 描述
        type: string
      id:
        description: 主键ID
        type: integer
      image:
        description: 修改时间
        type: string
      level:
        description: 等级 1-N 2-R 3-SR 4-SSR
        type: integer
      money:
        description: 价格
        type: number
      name:
        description: 卡牌名称
        type: string
      number:
        description: 发行数量
        type: integer
      star:
        description: 算力值
        type: integer
      status:
        description: 状态 true-正常 false-禁用
        type: boolean
      updateDate:
        description: 修改时间
        type: string
      updatedAt:
        description: 更新时间
        type: string
      walletAddress:
        description: 收款钱包地址
        type: string
    type: object
  model.AvfCardTransfer:
    properties:
      block:
        description: 区块号
        type: string
      buy_id:
        description: 购买人ID
        type: integer
      card_id:
        description: 卡牌ID
        type: integer
      cardName:
        description: 卡牌名称
        type: string
      createdAt:
        description: 创建时间
        type: string
      fees:
        description: 手续费
        type: integer
      from:
        description: 出售人钱包地址
        type: string
      id:
        description: 主键ID
        type: integer
      level:
        description: 卡牌等级
        type: integer
      price:
        description: 价格
        type: integer
      record_id:
        description: 卡牌记录ID
        type: integer
      status:
        description: 状态
        type: integer
      system:
        description: 系统手续费钱包地址
        type: string
      to:
        description: 购买人钱包地址
        type: string
      txHash:
        description: 交易hash
        type: string
      uid:
        description: 出售人ID
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  model.AvfEventLog:
    properties:
      blockNumber:
        type: string
      contract:
        type: string
      createTime:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      form:
        type: string
      id:
        description: 主键ID
        type: integer
      index:
        type: string
      name:
        type: string
      number:
        type: integer
      to:
        type: string
      tokens:
        type: string
      txIndex:
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  model.AvfOrder:
    properties:
      block:
        description: 区块号
        type: string
      createdAt:
        description: 创建时间
        type: string
      from:
        description: 支付地址
        type: string
      gas:
        description: 手续费
        type: string
      gasPrice:
        description: 手续费价格
        type: string
      id:
        description: 主键ID
        type: integer
      num:
        description: 数量
        type: integer
      number:
        description: 剩余数量
        type: integer
      orderSn:
        description: 订单编号
        type: string
      payTime:
        description: 支付时间
        type: integer
      price:
        description: 价格
        type: integer
      status:
        description: 状态 1-待支付 2-待确认 3-已完成 4-已取消5-已关闭
        type: integer
      to:
        description: 收款地址
        type: string
      txHash:
        description: 交易hash
        type: string
      uid:
        description: 用户ID
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  model.AvfOrderCard:
    properties:
      card:
        $ref: '#/definitions/model.AvfCard'
        description: 卡牌信息
      cardId:
        description: 卡牌ID
        type: integer
      createTime:
        description: 创建时间
        type: integer
      createdAt:
        description: 创建时间
        type: string
      giveType:
        description: 获得方式 1-抽奖 2-购买
        type: integer
      id:
        description: 主键ID
        type: integer
      level:
        description: 等级 1-N 2-R 3-SR 4-SSR
        type: integer
      orderId:
        description: 订单ID
        type: integer
      star:
        description: 算力值
        type: integer
      status:
        description: 状态 1-正常 2-转让中
        type: integer
      uid:
        description: 用户ID
        type: integer
      updateTime:
        description: 修改时间
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  model.AvfUser:
    properties:
      createdAt:
        description: 创建时间
        type: string
      createdTime:
        description: 创建时间
        type: integer
      id:
        description: 主键ID
        type: integer
      loginIp:
        description: 登录IP
        type: string
      loginTime:
        description: 登录时间
        type: integer
      loginTimes:
        description: 登录次数
        type: integer
      mobile:
        description: 手机号
        type: string
      password:
        description: 密码
        type: string
      payPassword:
        description: 支付密码
        type: string
      pid:
        description: 上级地址
        type: string
      status:
        description: 状态
        type: boolean
      updatedAt:
        description: 更新时间
        type: string
      username:
        description: 用户名
        type: string
      walletAddress:
        description: 钱包地址
        type: string
    type: object
  model.ExaCustomer:
    properties:
      createdAt:
        description: 创建时间
        type: string
      customerName:
        description: 客户名
        type: string
      customerPhoneData:
        description: 客户手机号
        type: string
      id:
        description: 主键ID
        type: integer
      sysUser:
        $ref: '#/definitions/model.SysUser'
        description: 管理详情
      sysUserAuthorityID:
        description: 管理角色ID
        type: string
      sysUserId:
        description: 管理ID
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  model.ExaFileUploadAndDownload:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      key:
        description: 编号
        type: string
      name:
        description: 文件名
        type: string
      tag:
        description: 文件标签
        type: string
      updatedAt:
        description: 更新时间
        type: string
      url:
        description: 文件地址
        type: string
    type: object
  model.ExcelInfo:
    properties:
      fileName:
        description: 文件名
        type: string
      infoList:
        items:
          $ref: '#/definitions/model.SysBaseMenu'
        type: array
    type: object
  model.Field:
    properties:
      columnName:
        description: 数据库字段
        type: string
      comment:
        description: 数据库字段描述
        type: string
      dataType:
        description: 数据库字段类型
        type: string
      dataTypeLong:
        description: 数据库字段长度
        type: string
      dictType:
        description: 字典
        type: string
      fieldDesc:
        description: 中文名
        type: string
      fieldJson:
        description: FieldJson
        type: string
      fieldName:
        description: Field名
        type: string
      fieldSearchType:
        description: 搜索条件
        type: string
      fieldType:
        description: Field数据类型
        type: string
    type: object
  model.SysApi:
    properties:
      apiGroup:
        description: api组
        type: string
      createdAt:
        description: 创建时间
        type: string
      description:
        description: api中文描述
        type: string
      id:
        description: 主键ID
        type: integer
      method:
        description: 方法:创建POST(默认)|查看GET|更新PUT|删除DELETE
        type: string
      path:
        description: api路径
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  model.SysAuthority:
    properties:
      authorityId:
        description: 角色ID
        type: string
      authorityName:
        description: 角色名
        type: string
      children:
        items:
          $ref: '#/definitions/model.SysAuthority'
        type: array
      createdAt:
        description: 创建时间
        type: string
      dataAuthorityId:
        items:
          $ref: '#/definitions/model.SysAuthority'
        type: array
      defaultRouter:
        description: 默认菜单(默认dashboard)
        type: string
      deletedAt:
        type: string
      menus:
        items:
          $ref: '#/definitions/model.SysBaseMenu'
        type: array
      parentId:
        description: 父角色ID
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  model.SysBaseMenu:
    properties:
      authoritys:
        items:
          $ref: '#/definitions/model.SysAuthority'
        type: array
      children:
        items:
          $ref: '#/definitions/model.SysBaseMenu'
        type: array
      closeTab:
        description: 自动关闭tab
        type: boolean
      component:
        description: 对应前端文件路径
        type: string
      createdAt:
        description: 创建时间
        type: string
      defaultMenu:
        description: 是否是基础路由（开发中）
        type: boolean
      hidden:
        description: 是否在列表隐藏
        type: boolean
      icon:
        description: 菜单图标
        type: string
      id:
        description: 主键ID
        type: integer
      keepAlive:
        description: 是否缓存
        type: boolean
      name:
        description: 路由name
        type: string
      parameters:
        items:
          $ref: '#/definitions/model.SysBaseMenuParameter'
        type: array
      parentId:
        description: 父菜单ID
        type: string
      path:
        description: 路由path
        type: string
      sort:
        description: 排序标记
        type: integer
      title:
        description: 菜单名
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  model.SysBaseMenuParameter:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      key:
        description: 地址栏携带参数的key
        type: string
      sysBaseMenuID:
        type: integer
      type:
        description: 地址栏携带参数为params还是query
        type: string
      updatedAt:
        description: 更新时间
        type: string
      value:
        description: 地址栏携带参数的值
        type: string
    type: object
  model.SysDictionary:
    properties:
      createdAt:
        description: 创建时间
        type: string
      desc:
        description: 描述
        type: string
      id:
        description: 主键ID
        type: integer
      name:
        description: 字典名（中）
        type: string
      status:
        description: 状态
        type: boolean
      sysDictionaryDetails:
        items:
          $ref: '#/definitions/model.SysDictionaryDetail'
        type: array
      type:
        description: 字典名（英）
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  model.SysDictionaryDetail:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      label:
        description: 展示值
        type: string
      sort:
        description: 排序标记
        type: integer
      status:
        description: 启用状态
        type: boolean
      sysDictionaryID:
        description: 关联标记
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      value:
        description: 字典值
        type: integer
    type: object
  model.SysOperationRecord:
    properties:
      agent:
        description: 代理
        type: string
      body:
        description: 请求Body
        type: string
      createdAt:
        description: 创建时间
        type: string
      error_message:
        description: 错误信息
        type: string
      id:
        description: 主键ID
        type: integer
      ip:
        description: 请求ip
        type: string
      latency:
        description: 延迟
        type: string
      method:
        description: 请求方法
        type: string
      path:
        description: 请求路径
        type: string
      resp:
        description: 响应Body
        type: string
      status:
        description: 请求状态
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      user:
        $ref: '#/definitions/model.SysUser'
      user_id:
        description: 用户id
        type: integer
    type: object
  model.SysUser:
    properties:
      authority:
        $ref: '#/definitions/model.SysAuthority'
      authorityId:
        description: 用户角色ID
        type: string
      createdAt:
        description: 创建时间
        type: string
      headerImg:
        description: 用户头像
        type: string
      id:
        description: 主键ID
        type: integer
      nickName:
        description: 用户昵称
        type: string
      updatedAt:
        description: 更新时间
        type: string
      userName:
        description: 用户登录名
        type: string
      uuid:
        description: 用户UUID
        type: string
    type: object
  model.System:
    properties:
      config:
        $ref: '#/definitions/config.Server'
    type: object
  request.AddMenuAuthorityInfo:
    properties:
      authorityId:
        description: 角色ID
        type: string
      menus:
        items:
          $ref: '#/definitions/model.SysBaseMenu'
        type: array
    type: object
  request.AvfCardSearch:
    properties:
      author:
        description: 作者
        type: string
      contractAddress:
        description: 合约地址
        type: string
      createDate:
        description: 创建时间
        type: string
      createdAt:
        description: 创建时间
        type: string
      desc:
        description: 描述
        type: string
      id:
        description: 主键ID
        type: integer
      image:
        description: 修改时间
        type: string
      level:
        description: 等级 1-N 2-R 3-SR 4-SSR
        type: integer
      money:
        description: 价格
        type: number
      name:
        description: 卡牌名称
        type: string
      number:
        description: 发行数量
        type: integer
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      star:
        description: 算力值
        type: integer
      status:
        description: 状态 true-正常 false-禁用
        type: boolean
      updateDate:
        description: 修改时间
        type: string
      updatedAt:
        description: 更新时间
        type: string
      walletAddress:
        description: 收款钱包地址
        type: string
    type: object
  request.AvfCardTransferSearch:
    properties:
      block:
        description: 区块号
        type: string
      buy_id:
        description: 购买人ID
        type: integer
      card_id:
        description: 卡牌ID
        type: integer
      cardName:
        description: 卡牌名称
        type: string
      createdAt:
        description: 创建时间
        type: string
      fees:
        description: 手续费
        type: integer
      from:
        description: 出售人钱包地址
        type: string
      id:
        description: 主键ID
        type: integer
      level:
        description: 卡牌等级
        type: integer
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      price:
        description: 价格
        type: integer
      record_id:
        description: 卡牌记录ID
        type: integer
      status:
        description: 状态
        type: integer
      system:
        description: 系统手续费钱包地址
        type: string
      to:
        description: 购买人钱包地址
        type: string
      txHash:
        description: 交易hash
        type: string
      uid:
        description: 出售人ID
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  request.AvfEventLogSearch:
    properties:
      blockNumber:
        type: string
      contract:
        type: string
      createTime:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      form:
        type: string
      id:
        description: 主键ID
        type: integer
      index:
        type: string
      name:
        type: string
      number:
        type: integer
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      to:
        type: string
      tokens:
        type: string
      txIndex:
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  request.AvfOrderCardSearch:
    properties:
      card:
        $ref: '#/definitions/model.AvfCard'
        description: 卡牌信息
      cardId:
        description: 卡牌ID
        type: integer
      createTime:
        description: 创建时间
        type: integer
      createdAt:
        description: 创建时间
        type: string
      giveType:
        description: 获得方式 1-抽奖 2-购买
        type: integer
      id:
        description: 主键ID
        type: integer
      level:
        description: 等级 1-N 2-R 3-SR 4-SSR
        type: integer
      orderId:
        description: 订单ID
        type: integer
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      star:
        description: 算力值
        type: integer
      status:
        description: 状态 1-正常 2-转让中
        type: integer
      uid:
        description: 用户ID
        type: integer
      updateTime:
        description: 修改时间
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  request.AvfOrderSearch:
    properties:
      block:
        description: 区块号
        type: string
      createdAt:
        description: 创建时间
        type: string
      from:
        description: 支付地址
        type: string
      gas:
        description: 手续费
        type: string
      gasPrice:
        description: 手续费价格
        type: string
      id:
        description: 主键ID
        type: integer
      num:
        description: 数量
        type: integer
      number:
        description: 剩余数量
        type: integer
      orderSn:
        description: 订单编号
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      payTime:
        description: 支付时间
        type: integer
      price:
        description: 价格
        type: integer
      status:
        description: 状态 1-待支付 2-待确认 3-已完成 4-已取消5-已关闭
        type: integer
      to:
        description: 收款地址
        type: string
      txHash:
        description: 交易hash
        type: string
      uid:
        description: 用户ID
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  request.AvfUserSearch:
    properties:
      createdAt:
        description: 创建时间
        type: string
      createdTime:
        description: 创建时间
        type: integer
      id:
        description: 主键ID
        type: integer
      loginIp:
        description: 登录IP
        type: string
      loginTime:
        description: 登录时间
        type: integer
      loginTimes:
        description: 登录次数
        type: integer
      mobile:
        description: 手机号
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      password:
        description: 密码
        type: string
      payPassword:
        description: 支付密码
        type: string
      pid:
        description: 上级地址
        type: string
      status:
        description: 状态
        type: boolean
      updatedAt:
        description: 更新时间
        type: string
      username:
        description: 用户名
        type: string
      walletAddress:
        description: 钱包地址
        type: string
    type: object
  request.CasbinInReceive:
    properties:
      authorityId:
        description: 权限id
        type: string
      casbinInfos:
        items:
          $ref: '#/definitions/request.CasbinInfo'
        type: array
    type: object
  request.CasbinInfo:
    properties:
      method:
        description: 方法
        type: string
      path:
        description: 路径
        type: string
    type: object
  request.ChangePasswordStruct:
    properties:
      newPassword:
        description: 新密码
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  request.Empty:
    type: object
  request.GetAuthorityId:
    properties:
      authorityId:
        description: 角色ID
        type: string
    type: object
  request.GetById:
    properties:
      id:
        description: 主键ID
        type: number
    type: object
  request.IdsReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  request.InitDB:
    properties:
      dbName:
        description: 数据库名
        type: string
      host:
        description: 服务器地址
        type: string
      password:
        description: 数据库密码
        type: string
      port:
        description: 数据库连接端口
        type: string
      userName:
        description: 数据库用户名
        type: string
    required:
    - dbName
    - userName
    type: object
  request.Login:
    properties:
      captcha:
        description: 验证码
        type: string
      captchaId:
        description: 验证码ID
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  request.PageInfo:
    properties:
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
    type: object
  request.SearchApiParams:
    properties:
      apiGroup:
        description: api组
        type: string
      createdAt:
        description: 创建时间
        type: string
      desc:
        description: 排序方式:升序false(默认)|降序true
        type: boolean
      description:
        description: api中文描述
        type: string
      id:
        description: 主键ID
        type: integer
      method:
        description: 方法:创建POST(默认)|查看GET|更新PUT|删除DELETE
        type: string
      orderKey:
        description: 排序
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      path:
        description: api路径
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  request.SetUserAuth:
    properties:
      authorityId:
        description: 角色ID
        type: string
      uuid:
        description: 用户UUID
        type: string
    type: object
  request.SysDictionaryDetailSearch:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      label:
        description: 展示值
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      sort:
        description: 排序标记
        type: integer
      status:
        description: 启用状态
        type: boolean
      sysDictionaryID:
        description: 关联标记
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      value:
        description: 字典值
        type: integer
    type: object
  request.SysDictionarySearch:
    properties:
      createdAt:
        description: 创建时间
        type: string
      desc:
        description: 描述
        type: string
      id:
        description: 主键ID
        type: integer
      name:
        description: 字典名（中）
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      status:
        description: 状态
        type: boolean
      sysDictionaryDetails:
        items:
          $ref: '#/definitions/model.SysDictionaryDetail'
        type: array
      type:
        description: 字典名（英）
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  request.SysOperationRecordSearch:
    properties:
      agent:
        description: 代理
        type: string
      body:
        description: 请求Body
        type: string
      createdAt:
        description: 创建时间
        type: string
      error_message:
        description: 错误信息
        type: string
      id:
        description: 主键ID
        type: integer
      ip:
        description: 请求ip
        type: string
      latency:
        description: 延迟
        type: string
      method:
        description: 请求方法
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      path:
        description: 请求路径
        type: string
      resp:
        description: 响应Body
        type: string
      status:
        description: 请求状态
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      user:
        $ref: '#/definitions/model.SysUser'
      user_id:
        description: 用户id
        type: integer
    type: object
  response.SysAuthorityCopyResponse:
    properties:
      authority:
        $ref: '#/definitions/model.SysAuthority'
      oldAuthorityId:
        description: 旧角色ID
        type: string
    type: object
  web_tools.CreateOrderResponse:
    properties:
      order_id:
        description: 订单ID
        type: integer
      order_sn:
        description: 订单号
        type: string
      price:
        description: 订单价格
        type: object
    type: object
  web_tools.LoginResponse:
    properties:
      id:
        description: 用户ID
        type: integer
      pid:
        description: 上级地址
        type: string
      status:
        description: 状态
        type: boolean
      token:
        description: token
        type: string
      username:
        description: 用户名
        type: string
      wallet_address:
        description: 钱包地址
        type: string
    type: object
  web_tools.MyCardResponse:
    properties:
      list:
        description: 卡牌列表
        items:
          $ref: '#/definitions/model.AvfOrderCard'
        type: array
      total:
        description: 总数
        type: integer
    type: object
  web_tools.OrderDetailResponse:
    properties:
      order_card_list:
        description: 卡牌列表
        items:
          $ref: '#/definitions/model.AvfOrderCard'
        type: array
      order_info:
        $ref: '#/definitions/model.AvfOrder'
        description: 订单详情
    type: object
  web_tools.OrderListResponse:
    properties:
      list:
        description: 订单列表
        items:
          $ref: '#/definitions/model.AvfOrder'
        type: array
      total:
        description: 总条数
        type: integer
    type: object
  web_tools.TransferResponse:
    properties:
      fees:
        description: 手续费
        type: integer
      price:
        description: 价格
        type: integer
      system_address:
        description: 系统收款地址
        type: string
      transfer_id:
        description: 转让卡牌ID
        type: integer
    type: object
  web_tools.UserInfo:
    properties:
      avw_balance:
        description: avw余额
        type: number
      ht_balance:
        description: ht余额
        type: number
      id:
        description: 用户ID
        type: integer
      pid:
        description: 上级地址
        type: string
      status:
        description: 状态
        type: boolean
      username:
        description: 用户名
        type: string
      wallet_address:
        description: 钱包地址
        type: string
    type: object
info:
  contact: {}
  description: This is a sample Server pets
  title: Swagger Example API
  version: 0.0.1
paths:
  /api/createApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: api路径, api中文描述, api组, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建基础api
      tags:
      - SysApi
  /api/deleteApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除api
      tags:
      - SysApi
  /api/deleteApisByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除选中Api
      tags:
      - SysApi
  /api/getAllApis:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取所有的Api 不分页
      tags:
      - SysApi
  /api/getApiById:
    post:
      consumes:
      - application/json
      parameters:
      - description: 根据id获取api
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取api
      tags:
      - SysApi
  /api/getApiList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取API列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SearchApiParams'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取API列表
      tags:
      - SysApi
  /api/updateApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: api路径, api中文描述, api组, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建基础api
      tags:
      - SysApi
  /authority/copyAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 旧角色id, 新权限id, 新权限名, 新父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.SysAuthorityCopyResponse'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"拷贝成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 拷贝角色
      tags:
      - Authority
  /authority/createAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限名, 父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - Authority
  /authority/deleteAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 删除角色
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - Authority
  /authority/getAuthorityList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取角色列表
      tags:
      - Authority
  /authority/setDataAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设置角色资源权限
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置角色资源权限
      tags:
      - Authority
  /authority/updateAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限名, 父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新角色信息
      tags:
      - Authority
  /autoCode/createTemp:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建自动代码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AutoCodeStruct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 自动代码模板
      tags:
      - AutoCode
  /autoCode/getColumn:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取当前表所有字段
      tags:
      - AutoCode
  /autoCode/getDatabase:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取当前所有数据库
      tags:
      - AutoCode
  /autoCode/getTables:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取当前数据库所有表
      tags:
      - AutoCode
  /autoCode/preview:
    post:
      consumes:
      - application/json
      parameters:
      - description: 预览创建代码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AutoCodeStruct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 预览创建后的代码
      tags:
      - AutoCode
  /avfCard/createAvfCard:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建AvfCard
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfCard'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建AvfCard
      tags:
      - AvfCard
  /avfCard/deleteAvfCard:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除AvfCard
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfCard'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除AvfCard
      tags:
      - AvfCard
  /avfCard/deleteAvfCardByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除AvfCard
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除AvfCard
      tags:
      - AvfCard
  /avfCard/findAvfCard:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询AvfCard
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfCard'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询AvfCard
      tags:
      - AvfCard
  /avfCard/getAvfCardList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 分页获取AvfCard列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AvfCardSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取AvfCard列表
      tags:
      - AvfCard
  /avfCard/updateAvfCard:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新AvfCard
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfCard'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新AvfCard
      tags:
      - AvfCard
  /avfCardTransfer/createAvfCardTransfer:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建AvfCardTransfer
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfCardTransfer'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建AvfCardTransfer
      tags:
      - AvfCardTransfer
  /avfCardTransfer/deleteAvfCardTransfer:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除AvfCardTransfer
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfCardTransfer'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除AvfCardTransfer
      tags:
      - AvfCardTransfer
  /avfCardTransfer/deleteAvfCardTransferByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除AvfCardTransfer
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除AvfCardTransfer
      tags:
      - AvfCardTransfer
  /avfCardTransfer/findAvfCardTransfer:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询AvfCardTransfer
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfCardTransfer'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询AvfCardTransfer
      tags:
      - AvfCardTransfer
  /avfCardTransfer/getAvfCardTransferList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 分页获取AvfCardTransfer列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AvfCardTransferSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取AvfCardTransfer列表
      tags:
      - AvfCardTransfer
  /avfCardTransfer/updateAvfCardTransfer:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新AvfCardTransfer
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfCardTransfer'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新AvfCardTransfer
      tags:
      - AvfCardTransfer
  /avfEventLog/createAvfEventLog:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建AvfEventLog
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfEventLog'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建AvfEventLog
      tags:
      - AvfEventLog
  /avfEventLog/deleteAvfEventLog:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除AvfEventLog
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfEventLog'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除AvfEventLog
      tags:
      - AvfEventLog
  /avfEventLog/deleteAvfEventLogByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除AvfEventLog
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除AvfEventLog
      tags:
      - AvfEventLog
  /avfEventLog/findAvfEventLog:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询AvfEventLog
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfEventLog'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询AvfEventLog
      tags:
      - AvfEventLog
  /avfEventLog/getAvfEventLogList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 分页获取AvfEventLog列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AvfEventLogSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取AvfEventLog列表
      tags:
      - AvfEventLog
  /avfEventLog/updateAvfEventLog:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新AvfEventLog
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfEventLog'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新AvfEventLog
      tags:
      - AvfEventLog
  /avfOrder/createAvfOrder:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建AvfOrder
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfOrder'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建AvfOrder
      tags:
      - AvfOrder
  /avfOrder/deleteAvfOrder:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除AvfOrder
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfOrder'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除AvfOrder
      tags:
      - AvfOrder
  /avfOrder/deleteAvfOrderByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除AvfOrder
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除AvfOrder
      tags:
      - AvfOrder
  /avfOrder/findAvfOrder:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询AvfOrder
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfOrder'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询AvfOrder
      tags:
      - AvfOrder
  /avfOrder/getAvfOrderList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 分页获取AvfOrder列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AvfOrderSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取AvfOrder列表
      tags:
      - AvfOrder
  /avfOrder/updateAvfOrder:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新AvfOrder
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfOrder'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新AvfOrder
      tags:
      - AvfOrder
  /avfOrderCard/createAvfOrderCard:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建AvfOrderCard
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfOrderCard'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建AvfOrderCard
      tags:
      - AvfOrderCard
  /avfOrderCard/deleteAvfOrderCard:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除AvfOrderCard
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfOrderCard'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除AvfOrderCard
      tags:
      - AvfOrderCard
  /avfOrderCard/deleteAvfOrderCardByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除AvfOrderCard
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除AvfOrderCard
      tags:
      - AvfOrderCard
  /avfOrderCard/findAvfOrderCard:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询AvfOrderCard
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfOrderCard'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询AvfOrderCard
      tags:
      - AvfOrderCard
  /avfOrderCard/getAvfOrderCardList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 分页获取AvfOrderCard列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AvfOrderCardSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取AvfOrderCard列表
      tags:
      - AvfOrderCard
  /avfOrderCard/updateAvfOrderCard:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新AvfOrderCard
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfOrderCard'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新AvfOrderCard
      tags:
      - AvfOrderCard
  /avfUser/createAvfUser:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建AvfUser
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建AvfUser
      tags:
      - AvfUser
  /avfUser/deleteAvfUser:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除AvfUser
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除AvfUser
      tags:
      - AvfUser
  /avfUser/deleteAvfUserByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除AvfUser
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除AvfUser
      tags:
      - AvfUser
  /avfUser/findAvfUser:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询AvfUser
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询AvfUser
      tags:
      - AvfUser
  /avfUser/getAvfUserList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 分页获取AvfUser列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AvfUserSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取AvfUser列表
      tags:
      - AvfUser
  /avfUser/updateAvfUser:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新AvfUser
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AvfUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新AvfUser
      tags:
      - AvfUser
  /base/captcha:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"验证码获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 生成验证码
      tags:
      - Base
  /base/login:
    post:
      parameters:
      - description: 用户名, 密码, 验证码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"登陆成功"}'
          schema:
            type: string
      summary: 用户登录
      tags:
      - Base
  /casbin/UpdateCasbin:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限模型列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新角色api权限
      tags:
      - Casbin
  /casbin/getPolicyPathByAuthorityId:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限模型列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取权限列表
      tags:
      - Casbin
  /customer/customer:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 客户ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除客户
      tags:
      - ExaCustomer
    get:
      consumes:
      - application/json
      parameters:
      - description: 客户ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取单一客户信息
      tags:
      - ExaCustomer
    post:
      consumes:
      - application/json
      parameters:
      - description: 客户用户名, 客户手机号码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建客户
      tags:
      - ExaCustomer
    put:
      consumes:
      - application/json
      parameters:
      - description: 客户ID, 客户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新客户信息
      tags:
      - ExaCustomer
  /customer/customerList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取权限客户列表
      tags:
      - ExaCustomer
  /email/emailTest:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"发送成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 发送测试邮件
      tags:
      - System
  /excel/downloadTemplate:
    get:
      consumes:
      - multipart/form-data
      parameters:
      - description: 模板名称
        in: query
        name: fileName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: 下载模板
      tags:
      - excel
  /excel/exportExcel:
    post:
      consumes:
      - application/json
      parameters:
      - description: 导出Excel文件信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.ExcelInfo'
      produces:
      - application/octet-stream
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: 导出Excel
      tags:
      - excel
  /excel/importExcel:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 导入Excel文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"导入成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 导入Excel文件
      tags:
      - excel
  /excel/loadExcel:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"加载数据成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 加载Excel数据
      tags:
      - excel
  /fileUploadAndDownload/breakpointContinue:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: an example for breakpoint resume, 断点续传示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"切片创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 断点续传到服务器
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/deleteFile:
    post:
      parameters:
      - description: 传入文件里面id即可
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.ExaFileUploadAndDownload'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除文件
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/findFile:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件完成
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"file uploaded, 文件创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建文件
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/getFileList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页文件列表
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/removeChunk:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 删除缓存切片
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"缓存切片删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除切片
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"上传成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 上传文件示例
      tags:
      - ExaFileUploadAndDownload
  /init/checkdb:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"探测完成"}'
          schema:
            type: string
      summary: 初始化用户数据库
      tags:
      - CheckDB
  /init/initdb:
    post:
      parameters:
      - description: 初始化数据库参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.InitDB'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"自动创建数据库成功"}'
          schema:
            type: string
      summary: 初始化用户数据库
      tags:
      - InitDB
  /jwt/jsonInBlacklist:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"拉黑成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: jwt加入黑名单
      tags:
      - Jwt
  /menu/GetMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetAuthorityId'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取指定角色menu
      tags:
      - AuthorityMenu
  /menu/addBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 路由path, 父菜单ID, 路由name, 对应前端文件路径, 排序标记
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"添加成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 新增菜单
      tags:
      - Menu
  /menu/addMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddMenuAuthorityInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"添加成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 增加menu和角色关联关系
      tags:
      - AuthorityMenu
  /menu/deleteBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除菜单
      tags:
      - Menu
  /menu/getBaseMenuById:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取菜单
      tags:
      - Menu
  /menu/getBaseMenuTree:
    post:
      parameters:
      - description: 空
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Empty'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - AuthorityMenu
  /menu/getMenu:
    post:
      parameters:
      - description: 空
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Empty'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - AuthorityMenu
  /menu/getMenuList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取基础menu列表
      tags:
      - Menu
  /menu/updateBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 路由path, 父菜单ID, 路由name, 对应前端文件路径, 排序标记
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新菜单
      tags:
      - Menu
  /simpleUploader/checkFileMd5:
    get:
      parameters:
      - description: md5
        in: query
        name: md5
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 断点续传插件版示例
      tags:
      - SimpleUploader
  /simpleUploader/mergeFileMd5:
    get:
      parameters:
      - description: md5
        in: query
        name: md5
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"合并成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 合并文件
      tags:
      - SimpleUploader
  /simpleUploader/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 断点续传插件版示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"切片创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 断点续传插件版示例
      tags:
      - SimpleUploader
  /sysDictionary/createSysDictionary:
    post:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建SysDictionary
      tags:
      - SysDictionary
  /sysDictionary/deleteSysDictionary:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除SysDictionary
      tags:
      - SysDictionary
  /sysDictionary/findSysDictionary:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID或字典英名
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询SysDictionary
      tags:
      - SysDictionary
  /sysDictionary/getSysDictionaryList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小, 搜索条件
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysDictionarySearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取SysDictionary列表
      tags:
      - SysDictionary
  /sysDictionary/updateSysDictionary:
    put:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新SysDictionary
      tags:
      - SysDictionary
  /sysDictionaryDetail/createSysDictionaryDetail:
    post:
      consumes:
      - application/json
      parameters:
      - description: SysDictionaryDetail模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/deleteSysDictionaryDetail:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysDictionaryDetail模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/findSysDictionaryDetail:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询SysDictionaryDetail
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/getSysDictionaryDetailList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小, 搜索条件
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysDictionaryDetailSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取SysDictionaryDetail列表
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/updateSysDictionaryDetail:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新SysDictionaryDetail
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysOperationRecord/createSysOperationRecord:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建SysOperationRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysOperationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/deleteSysOperationRecord:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysOperationRecord模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysOperationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/deleteSysOperationRecordByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除SysOperationRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"批量删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量删除SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/findSysOperationRecord:
    get:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysOperationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/getSysOperationRecordList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小, 搜索条件
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysOperationRecordSearch'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取SysOperationRecord列表
      tags:
      - SysOperationRecord
  /system/getServerInfo:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取服务器信息
      tags:
      - System
  /system/getSystemConfig:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取配置文件内容
      tags:
      - System
  /system/reloadSystem:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"重启系统成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 重启系统
      tags:
      - System
  /system/setSystemConfig:
    post:
      parameters:
      - description: 设置配置文件内容
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.System'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置配置文件内容
      tags:
      - System
  /user/changePassword:
    put:
      parameters:
      - description: 用户名, 原密码, 新密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChangePasswordStruct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户修改密码
      tags:
      - SysUser
  /user/deleteUser:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 用户ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - SysUser
  /user/getUserList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取用户列表
      tags:
      - SysUser
  /user/register:
    post:
      parameters:
      - description: 用户名, 昵称, 密码, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"注册成功"}'
          schema:
            type: string
      summary: 用户注册账号
      tags:
      - SysUser
  /user/setUserAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户UUID, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuth'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置用户权限
      tags:
      - SysUser
  /user/setUserInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, 用户名, 昵称, 头像链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置用户信息
      tags:
      - SysUser
  /web/card/detail:
    get:
      consumes:
      - application/json
      parameters:
      - description: 卡牌ID
        in: query
        name: card_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AvfCard'
      summary: 获取卡牌详情
      tags:
      - 前端接口
  /web/card/list:
    get:
      consumes:
      - application/json
      parameters:
      - description: 等级 默认全部 1-N 2-R 3-SR 4-SSR
        in: query
        name: level
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AvfCard'
      summary: 获取卡牌列表
      tags:
      - 前端接口
  /web/order/cancelOrder:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: token
        in: header
        name: x-token
        required: true
        type: string
      - description: 订单ID
        in: body
        name: order_id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: status":200,"msg":"成功"}
          schema:
            type: string
      summary: 取消订单
      tags:
      - 前端接口
  /web/order/createOrder:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: token
        in: header
        name: x-token
        required: true
        type: string
      - description: 盲盒类型 1-一连抽 2-十连抽
        in: body
        name: type
        required: true
        schema:
          type: string
      - description: 数量 购买盲盒数量
        in: body
        name: num
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web_tools.CreateOrderResponse'
      summary: 创建订单
      tags:
      - 前端接口
  /web/order/getPrice:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.BlindBox'
      summary: 获取盲盒价格
      tags:
      - 前端接口
  /web/order/list:
    get:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: x-token
        required: true
        type: string
      - description: 页码 第一页为0
        in: query
        name: page
        type: string
      - description: 数量 默认10
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web_tools.OrderListResponse'
      summary: 订单列表
      tags:
      - 前端接口
  /web/order/orderDetail:
    get:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: x-token
        required: true
        type: string
      - description: 订单ID
        in: query
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web_tools.OrderDetailResponse'
      summary: 订单详情
      tags:
      - 前端接口
  /web/order/payOrder:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: token
        in: header
        name: x-token
        required: true
        type: string
      - description: 订单ID
        in: body
        name: order_id
        required: true
        schema:
          type: string
      - description: 发起交易后的事务hash
        in: body
        name: tx_hash
        required: true
        schema:
          type: string
      - description: 发起交易的钱包地址
        in: body
        name: address
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"message":"200"}'
          schema:
            type: string
      summary: 支付订单
      tags:
      - 前端接口
  /web/order_card/luckyDraw:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: token
        in: header
        name: x-token
        required: true
        type: string
      - description: 订单ID
        in: body
        name: order_id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AvfCard'
      summary: 抽奖
      tags:
      - 前端接口
  /web/order_card/myCard:
    get:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: x-token
        required: true
        type: string
      - description: 页码
        in: query
        name: page
        type: string
      - description: 数量 默认10
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web_tools.MyCardResponse'
      summary: 我的卡牌列表
      tags:
      - 前端接口
  /web/order_card/transferCard:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: token
        in: header
        name: x-token
        required: true
        type: string
      - description: 卡牌转让ID
        in: body
        name: transfer_id
        required: true
        schema:
          type: string
      - description: 交易事务hash
        in: body
        name: tx_hash
        required: true
        schema:
          type: string
      - description: 提交支付钱包地址
        in: body
        name: address
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web_tools.TransferResponse'
      summary: 支付转让手续费
      tags:
      - 前端接口
  /web/user/getUserInfo:
    get:
      consumes:
      - application/json
      parameters:
      - description: token信息
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web_tools.UserInfo'
      summary: 获取用户信息
      tags:
      - 前端接口
  /web/user/login:
    get:
      consumes:
      - application/json
      parameters:
      - description: 钱包地址
        in: query
        name: wallet_address
        required: true
        type: string
      - description: 上级地址
        in: query
        name: pid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web_tools.LoginResponse'
      summary: 登录
      tags:
      - 前端接口
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
